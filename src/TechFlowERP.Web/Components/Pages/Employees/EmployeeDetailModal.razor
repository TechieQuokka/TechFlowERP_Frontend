@using System.Linq
@using TechFlowERP.Models.DTOs.Employee
@using TechFlowERP.Models.Enums
@using TechFlowERP.Web.Services.Interfaces
@inject IEmployeeService EmployeeService
@inject IJSRuntime JSRuntime
@inject ILogger<EmployeeDetailModal> Logger

<div class="modal fade" id="employeeDetailModal" tabindex="-1" aria-labelledby="employeeDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="employeeDetailModalLabel">
                    <i class="fas fa-user me-2"></i>
                    @(currentEmployee?.Name ?? "직원") 상세 정보
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                @if (isLoading)
                {
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">로딩 중...</span>
                        </div>
                        <p class="mt-2 text-muted">직원 정보를 불러오는 중...</p>
                    </div>
                }
                else if (currentEmployee != null)
                {
                    <div class="row">
                        <!-- 왼쪽: 기본 정보 -->
                        <div class="col-md-8">
                            <!-- 프로필 카드 -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="fas fa-id-card me-2"></i>기본 정보
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <div class="avatar-circle-large mx-auto">
                                                @currentEmployee.Name.Substring(0, 1).ToUpper()
                                            </div>
                                        </div>
                                        <div class="col-md-10">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">이름</label>
                                                        <div class="fw-bold">@currentEmployee.Name</div>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">이메일</label>
                                                        <div>
                                                            <a href="mailto:@currentEmployee.Email" class="text-decoration-none">
                                                                @currentEmployee.Email
                                                            </a>
                                                        </div>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">입사일</label>
                                                        <div>
                                                            @currentEmployee.HireDate.ToString("yyyy년 MM월 dd일")
                                                            <small class="text-muted">
                                                                (근무 @((DateTime.Now - currentEmployee.HireDate).Days / 365.25).ToString("F1")년)
                                                            </small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">부서</label>
                                                        <div>
                                                            @if (!string.IsNullOrEmpty(currentEmployee.DepartmentName))
                                                            {
                                                                <span class="badge bg-primary">@currentEmployee.DepartmentName</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">미배정</span>
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">직급</label>
                                                        <div>
                                                            @if (!string.IsNullOrEmpty(currentEmployee.PositionTitle))
                                                            {
                                                                <span class="badge bg-success">@currentEmployee.PositionTitle</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">미배정</span>
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label text-muted">매니저</label>
                                                        <div>
                                                            @if (!string.IsNullOrEmpty(currentEmployee.ManagerName))
                                                            {
                                                                <i class="fas fa-user-tie me-1 text-success"></i>
                                                                @currentEmployee.ManagerName
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">매니저 없음</span>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- 기술 스택 카드 -->
                            <div class="card mb-3">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">
                                        <i class="fas fa-code me-2"></i>보유 기술
                                        <span class="badge bg-secondary ms-2">@(currentEmployee.Skills?.Count ?? 0)개</span>
                                    </h6>
                                    <button type="button" class="btn btn-outline-primary btn-sm" @onclick="OpenSkillsManagement">
                                        <i class="fas fa-edit me-1"></i>관리
                                    </button>
                                </div>
                                <div class="card-body">
                                    @if (currentEmployee.Skills != null && currentEmployee.Skills.Any())
                                    {
                                        <div class="row">
                                            @foreach (var skillGroup in currentEmployee.Skills.GroupBy(s => s.SkillLevel))
                                            {
                                                <div class="col-md-4 mb-3">
                                                    <h6 class="text-@GetSkillLevelColor(skillGroup.Key)">
                                                        @GetSkillLevelIcon(skillGroup.Key) @GetSkillLevelText(skillGroup.Key)
                                                    </h6>
                                                    @foreach (var skill in skillGroup.OrderBy(s => s.Technology))
                                                    {
                                                        <div class="skill-item mb-2">
                                                            <span class="badge badge-skill-@skillGroup.Key.ToString().ToLower() me-2">
                                                                @skill.Technology
                                                            </span>
                                                            <small class="text-muted">@@skill.YearsExperience년</small>
                                                            @if (!string.IsNullOrEmpty(skill.Certification))
                                                            {
                                                                <i class="fas fa-certificate text-warning ms-1" title="@skill.Certification"></i>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center py-3">
                                            <i class="fas fa-code fa-2x text-muted mb-2"></i>
                                            <p class="text-muted mb-0">등록된 기술이 없습니다.</p>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- 프로젝트 활동 카드 -->
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="fas fa-project-diagram me-2"></i>프로젝트 활동
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row text-center">
                                        <div class="col-md-4">
                                            <div class="metric-box">
                                                <div class="metric-value text-primary">@currentEmployee.CurrentProjectsCount</div>
                                                <div class="metric-label">현재 프로젝트</div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="metric-box">
                                                <div class="metric-value text-success">@currentEmployee.TotalHoursThisMonth.ToString("F1")h</div>
                                                <div class="metric-label">이번 달 작업시간</div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="metric-box">
                                                <div class="metric-value text-@GetUtilizationColor(currentEmployee.UtilizationRate)">
                                                    @currentEmployee.UtilizationRate.ToString("F1")%
                                                </div>
                                                <div class="metric-label">활용도</div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- 활용도 차트 -->
                                    <div class="mt-3">
                                        <label class="form-label text-muted">활용도</label>
                                        <div class="progress" style="height: 12px;">
                                            <div class="progress-bar bg-@GetUtilizationColor(currentEmployee.UtilizationRate)"
                                                 role="progressbar"
                                                 style="width: @Math.Min(currentEmployee.UtilizationRate, 100)%">
                                                @currentEmployee.UtilizationRate.ToString("F1")%
                                            </div>
                                        </div>
                                        <small class="text-muted mt-1 d-block">
                                            @GetUtilizationMessage(currentEmployee.UtilizationRate)
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 오른쪽: 요약 정보 -->
                        <div class="col-md-4">
                            <!-- 상태 카드 -->
                            <div class="card mb-3">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="fas fa-info-circle me-2"></i>상태 정보
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="status-item mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>계정 상태</span>
                                            @if (currentEmployee.IsActive)
                                            {
                                                <span class="badge bg-success">활성</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">비활성</span>
                                            }
                                        </div>
                                    </div>

                                    <div class="status-item mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>급여</span>
                                            <span class="fw-bold">@currentEmployee.Salary.ToString("N0")만원</span>
                                        </div>
                                    </div>

                                    <div class="status-item mb-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>연차 잔여</span>
                                            <span class="badge bg-info">@@currentEmployee.LeaveBalance일</span>
                                        </div>
                                    </div>

                                    <div class="status-item">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>근무 기간</span>
                                            <span class="text-muted">
                                                @((DateTime.Now - currentEmployee.HireDate).Days / 365.25).ToString("F1")년
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- 팀원 정보 카드 (매니저인 경우) -->
                            @if (teamMembers.Any())
                            {
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0">
                                            <i class="fas fa-users me-2"></i>관리 중인 팀원
                                            <span class="badge bg-secondary ms-2">@@teamMembers.Count명</span>
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        @foreach (var member in teamMembers.Take(5))
                                        {
                                            <div class="team-member-item d-flex align-items-center mb-2">
                                                <div class="avatar-circle-small me-2">
                                                    @member.Name.Substring(0, 1).ToUpper()
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="fw-bold">@member.Name</div>
                                                    <small class="text-muted">@member.PositionTitle</small>
                                                </div>
                                                <div>
                                                    @if (member.IsActive)
                                                    {
                                                        <i class="fas fa-circle text-success"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-circle text-danger"></i>
                                                    }
                                                </div>
                                            </div>
                                        }
                                        @if (teamMembers.Count > 5)
                                        {
                                            <small class="text-muted">외 @(teamMembers.Count - 5)명 더</small>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- 액션 버튼들 -->
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="fas fa-tools me-2"></i>관리 작업
                                    </h6>
                                </div>
                                <div class="card-body d-grid gap-2">
                                    <button type="button" class="btn btn-outline-primary" @onclick="EditEmployee">
                                        <i class="fas fa-edit me-2"></i>정보 수정
                                    </button>
                                    <button type="button" class="btn btn-outline-info" @onclick="OpenSkillsManagement">
                                        <i class="fas fa-code me-2"></i>기술 관리
                                    </button>
                                    <button type="button" class="btn btn-outline-warning" @onclick="ToggleStatus">
                                        <i class="fas fa-@(currentEmployee.IsActive ? "user-slash" : "user-check") me-2"></i>
                                        @(currentEmployee.IsActive ? "비활성화" : "활성화")
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" @onclick="ExportProfile">
                                        <i class="fas fa-download me-2"></i>프로필 내보내기
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    닫기
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback<EmployeeDto> OnEditEmployee { get; set; }
    [Parameter] public EventCallback<EmployeeDto> OnManageSkills { get; set; }
    [Parameter] public EventCallback<EmployeeDto> OnEmployeeUpdated { get; set; }

    private EmployeeDto? currentEmployee = null;
    private List<EmployeeDto> teamMembers = new();
    private bool isLoading = false;

    public async Task OpenAsync(EmployeeDto employee)
    {
        currentEmployee = employee;
        teamMembers = new List<EmployeeDto>();

        await JSRuntime.InvokeVoidAsync("eval", "new bootstrap.Modal(document.getElementById('employeeDetailModal')).show()");
        StateHasChanged();

        await LoadTeamMembersIfNeeded();
    }

    private async Task LoadTeamMembersIfNeeded()
    {
        if (currentEmployee == null) return;

        try
        {
            teamMembers = new List<EmployeeDto>();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "팀원 목록 로드 중 오류 발생: {EmployeeId}", currentEmployee.Id);
            teamMembers = new List<EmployeeDto>();
        }
    }

    private async Task EditEmployee()
    {
        if (currentEmployee != null)
        {
            await OnEditEmployee.InvokeAsync(currentEmployee);
            await CloseModal();
        }
    }

    private async Task OpenSkillsManagement()
    {
        if (currentEmployee != null)
        {
            await OnManageSkills.InvokeAsync(currentEmployee);
        }
    }

    private async Task ToggleStatus()
    {
        await JSRuntime.InvokeVoidAsync("alert", "상태 변경 기능은 곧 구현됩니다.");
    }

    private async Task ExportProfile()
    {
        if (currentEmployee == null) return;

        try
        {
            var skillsInfo = currentEmployee.Skills != null && currentEmployee.Skills.Any()
                ? string.Join("\n", currentEmployee.Skills.Select(s => $"- {s.Technology} ({GetSkillLevelText(s.SkillLevel)}, {s.YearsExperience}년)"))
                : "등록된 기술이 없습니다.";

            var profileLines = new List<string>
            {
                "직원 프로필",
                "==================",
                $"이름: {currentEmployee.Name}",
                $"이메일: {currentEmployee.Email}",
                $"부서: {currentEmployee.DepartmentName ?? "미배정"}",
                $"직급: {currentEmployee.PositionTitle ?? "미배정"}",
                $"매니저: {currentEmployee.ManagerName ?? "없음"}",
                $"입사일: {currentEmployee.HireDate:yyyy-MM-dd}",
                $"급여: {currentEmployee.Salary:N0}만원",
                $"연차 잔여: {currentEmployee.LeaveBalance}일",
                $"상태: {(currentEmployee.IsActive ? "활성" : "비활성")}",
                "",
                "프로젝트 정보",
                "==================",
                $"현재 프로젝트: {currentEmployee.CurrentProjectsCount}개",
                $"이번 달 작업시간: {currentEmployee.TotalHoursThisMonth:F1}시간",
                $"활용도: {currentEmployee.UtilizationRate:F1}%",
                "",
                "보유 기술",
                "==================",
                skillsInfo,
                "",
                $"생성일: {DateTime.Now:yyyy-MM-dd HH:mm}"
            };

            var profileData = string.Join("\n", profileLines);
            var fileName = $"{currentEmployee.Name}_프로필_{DateTime.Now:yyyyMMdd}.txt";
            var encodedData = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(profileData));

            var script = $"const link = document.createElement('a'); link.href = 'data:text/plain;base64,{encodedData}'; link.download = '{fileName}'; link.click();";
            await JSRuntime.InvokeVoidAsync("eval", script);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "프로필 내보내기 중 오류 발생");
            await JSRuntime.InvokeVoidAsync("alert", "내보내기 중 오류가 발생했습니다.");
        }
    }

    private async Task CloseModal()
    {
        await JSRuntime.InvokeVoidAsync("eval", "bootstrap.Modal.getInstance(document.getElementById('employeeDetailModal')).hide()");
    }

    private string GetSkillLevelText(SkillLevel level)
    {
        return level switch
        {
            SkillLevel.Beginner => "초급",
            SkillLevel.Intermediate => "중급",
            SkillLevel.Expert => "고급",
            _ => "미정"
        };
    }

    private string GetSkillLevelColor(SkillLevel level)
    {
        return level switch
        {
            SkillLevel.Beginner => "info",
            SkillLevel.Intermediate => "success",
            SkillLevel.Expert => "warning",
            _ => "secondary"
        };
    }

    private string GetSkillLevelIcon(SkillLevel level)
    {
        return level switch
        {
            SkillLevel.Beginner => "🌱",
            SkillLevel.Intermediate => "⭐",
            SkillLevel.Expert => "👑",
            _ => "❓"
        };
    }

    private string GetUtilizationColor(decimal utilization)
    {
        return utilization switch
        {
            >= 90 => "danger",
            >= 80 => "warning",
            >= 60 => "success",
            _ => "info"
        };
    }

    private string GetUtilizationMessage(decimal utilization)
    {
        return utilization switch
        {
            >= 95 => "과부하 상태입니다. 업무량 조정이 필요합니다.",
            >= 85 => "높은 활용도입니다. 모니터링이 필요합니다.",
            >= 70 => "적정 활용도입니다.",
            >= 50 => "여유가 있습니다. 추가 업무 할당이 가능합니다.",
            _ => "활용도가 낮습니다. 업무 배분을 검토해보세요."
        };
    }
}

<style>
    .avatar-circle-large {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #6610f2);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 32px;
    }

    .avatar-circle-small {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #6610f2);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 12px;
        flex-shrink: 0;
    }

    .metric-box {
        padding: 1rem;
        text-align: center;
    }

    .metric-value {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .metric-label {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .skill-item {
        line-height: 1.5;
    }

    .badge-skill-beginner {
        background-color: #e3f2fd;
        color: #1565c0;
    }

    .badge-skill-intermediate {
        background-color: #e8f5e8;
        color: #2e7d32;
    }

    .badge-skill-expert {
        background-color: #fff3e0;
        color: #ef6c00;
    }

    .status-item {
        padding: 0.5rem 0;
        border-bottom: 1px solid #f8f9fa;
    }

        .status-item:last-child {
            border-bottom: none;
        }

    .team-member-item {
        padding: 0.5rem 0;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .progress {
        background-color: #e9ecef;
    }
</style>